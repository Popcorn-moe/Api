interface IMedia {
	id: ID!
	anime: Anime!
	name: String
	type: MediaType!
	rate: Float!
	release_date: DateTime
	edit_date: DateTime!
	posted_date: DateTime!
	content: String
	replies_count: Int
	replies(limit: Int!, offset: Int = 0): [Comment!]!
	comment(content: String!, reply_to: ID): Comment!
	linkTo(anime: ID!, season: Int = null, episode: Int = null): Boolean!
}

type Media implements IMedia {
	id: ID!
	anime: Anime!
	name: String
	type: MediaType!
	rate: Float!
	release_date: DateTime
	edit_date: DateTime!
	posted_date: DateTime!
	content: String
	replies_count: Int
	replies(limit: Int!, offset: Int = 0): [Comment!]!
	comment(content: String!, reply_to: ID): Comment!
	linkTo(anime: ID!, season: Int = null, episode: Int = null): Boolean!
}

type Episode implements IMedia {
	id: ID!
	anime: Anime!
	name: String
	type: MediaType!
	rate: Float!
	release_date: DateTime
	edit_date: DateTime!
	posted_date: DateTime!
	content: String
	replies_count: Int
	replies(limit: Int!, offset: Int = 0): [Comment!]
	comment(content: String!, reply_to: ID): Comment!
	linkTo(anime: ID!, season: Int = null, episode: Int = null): Boolean!
	episode: Int
	season: Int
}

enum MediaType {
	EPISODE
	TRAILER
	OPENING
	ENDING
	OST
	FILM
}

type Comment {
	id: ID!
	user: User!
	content: String!
	posted: DateTime!
	edited: DateTime
	replies_count: Int
	replies(limit: Int!, offset: Int = 0): [Comment!]!
}

input MediaInput {
	name: String
	type: MediaType!
	release_date: DateTime
	content: String
}

input MediaUpdate {
	name: String
	type: MediaType
	release_date: DateTime
	content: String
}

extend type Mutation {
	addMedia(media: MediaInput!): IMedia!
	updateMedia(id: ID!, media: MediaUpdate!): ID!
	linkMedia(media: ID!, anime: ID!, season: Int = null, episode: Int = null): Boolean!
	deleteMedia(id: ID!): ID!
}
