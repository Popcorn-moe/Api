interface Notification {
	id: ID!
	date: Date!
	user: User! @link(collection: "users")
	type: NotifType
}

enum NotifType {
	MESSAGE
	ANIME_FOLLOW
	ROOM_INVITE
}

type NotifMessageContent implements Notification {
	id: ID!
	date: Date!
	user: User!
	type: NotifType
	message: String!
}

type NotifAnimeFollowContent implements Notification {
	id: ID!
	date: Date!
	user: User!
	type: NotifType
	anime: Anime! @link(collection: "animes", objectId: false)
}

extend type Mutation {
	delNotification(notif: ID!): Result!
}

extend type Query {
	getNotifications(user: ID!): [Notification!]!
}

extend type Subscription {
	notification: Notification
}
